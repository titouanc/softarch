module FamiliesToPersons;

-- @path Families=/FamiliesToPersons/Families.ecore
-- @path Persons=/FamiliesToPersons/Persons.ecore

create OUT: Persons from IN: Families;

helper context Families!Member def: isFemale: Boolean =
	if not self.familyMother.oclIsUndefined() then true
	else not self.familyDaughter.oclIsUndefined() endif;

helper context Families!Member def: familyName: String =
	Set{self.familyFather, self.familyMother, self.familySon, self.familyDaughter}
       ->any(f | not f.oclIsUndefined()).lastName;


rule Member2Male {
	from
		s: Families!Member (not s.isFemale)
	to
		t: Persons!Male (fullName <- s.firstName + ' ' + s.familyName)
}

rule Member2Female {
	from
		s: Families!Member (s.isFemale)
	to
		t: Persons!Female (fullName <- s.firstName + ' ' + s.familyName)
}
